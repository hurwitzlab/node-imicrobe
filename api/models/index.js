'use strict';

var fs        = require("fs");
var path      = require("path");
var sequelize = require('../../config/mysql').sequelize;

/**
 * Import database model files
 */

var models = {};

fs
    .readdirSync(__dirname)
    .filter(function(file) {
        return (file.split(".").pop() === 'js') && (file !== "index.js");
    })
    .forEach(function(file) {
        var model = sequelize.import(path.join(__dirname, file));
        models[model.name] = model;
    });

module.exports = models;

/**
 * Define table relationships (must be done manually, not auto-generated by sequelize-auto)
 */

// project <-> investigator
models.project.belongsToMany(models.investigator, { through: models.project_to_investigator, foreignKey: 'project_id' });
models.investigator.belongsToMany(models.project, { through: models.project_to_investigator, foreignKey: 'investigator_id' });

// project <-> domain
models.project.belongsToMany(models.domain, { through: models.project_to_domain, foreignKey: 'project_id' });
models.domain.belongsToMany(models.project, { through: models.project_to_domain, foreignKey: 'domain_id' });

// project <- publication
models.project.hasMany(models.publication, { foreignKey: 'project_id' });

// project <- sample
models.project.hasMany(models.sample, { foreignKey: 'project_id' });

// sample <-> investigator
models.sample.belongsToMany(models.investigator, { through: models.sample_to_investigator, foreignKey: 'sample_id' });
models.investigator.belongsToMany(models.sample, { through: models.sample_to_investigator, foreignKey: 'investigator_id' });

// sample <-> ontology
models.sample.belongsToMany(models.ontology, { through: models.sample_to_ontology, foreignKey: 'sample_id' });
models.ontology.belongsToMany(models.sample, { through: models.sample_to_ontology, foreignKey: 'ontology_id' });

// sample <- sample_file
models.sample.hasMany(models.sample_file, { foreignKey: 'sample_file_id' });

